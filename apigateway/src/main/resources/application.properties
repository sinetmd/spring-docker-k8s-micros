# port & name of the application
spring.application.name=apigateway
server.port=8084

# eureka discovery client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Zipkin
# reads 100% of the tracing
# for easier testing you could lower the probability
management.tracing.sampling.probability=1.0

# GATEWAY
# Company routes
# use http when you have a single instance of service
# otherwise use lb (load balancer from spring cloud)
# when you have multiple instances, you need to use the name of the service with it
# ex: spring.cloud.gateway.mvc.routes[0].uri=lb://COMPANY-SERVICE
# load balancer with decide where the request on which service will go
# if we have for example 10 instances of same service
spring.cloud.gateway.mvc.routes[0].id=company_service
spring.cloud.gateway.mvc.routes[0].uri=lb://COMPANY-SERVICE
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/companies/**

spring.cloud.gateway.mvc.routes[1].id=job_service
spring.cloud.gateway.mvc.routes[1].uri=lb://JOB-SERVICE-DEV
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/jobs/**

spring.cloud.gateway.mvc.routes[2].id=review_service
spring.cloud.gateway.mvc.routes[2].uri=lb://REVIEW-SERVICE
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/reviews/**

# routes for eureka server
spring.cloud.gateway.mvc.routes[3].id=eureka-server
spring.cloud.gateway.mvc.routes[3].uri=http://localhost:8761
spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/eureka/main
spring.cloud.gateway.mvc.routes[3].filters[0]=SetPath=/

# makes sure your static content is loaded (css, js)
spring.cloud.gateway.mvc.routes[4].id=eureka-server-static
spring.cloud.gateway.mvc.routes[4].uri=http://localhost:8761
spring.cloud.gateway.mvc.routes[4].predicates[0]=Path=/eureka/**


# enable behind the scenes
# all loggers in the project are set to info
# means all loggers output with lvl info or error will be output in app logs
logging.level.root=info
# class responsible for defining and identifying routes
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=TRACE
logging.level.org.springframework.cloud.gateway=TRACE
